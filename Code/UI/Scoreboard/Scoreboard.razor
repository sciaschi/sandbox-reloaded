@using Sandbox.UI

@inherits PanelComponent

<root class="scoreboard">
    <div class="header" @ref="Header">
        <label class="name">Name</label>
        <label class="kills">Kills</label>
        <label class="deaths">Deaths</label>
        <label class="ping">Ping</label>
    </div>
    
    <div class="canvas" @ref="Canvas">
        @foreach (var entry in scoreboardEntries)
        {
            <ScoreboardEntry Client="@entry.Value" />
        }
    </div>
</root>

@code
{
    public Panel Canvas { get; protected set; }
    public Panel Header { get; protected set; }
    
    private Dictionary<PlayerData, PlayerData> scoreboardEntries = new();

    protected override int BuildHash() 
    {
        return HashCode.Combine(PlayerData.All.Count(), ShouldBeOpen());
    }

    protected override void OnUpdate()
    {
        SetClass("open", ShouldBeOpen());

        // Update the scoreboard entries
        var currentClients = PlayerData.All.ToHashSet();
        
        // Add new clients
        foreach (var client in currentClients.Except(scoreboardEntries.Keys))
        {
            scoreboardEntries[client] = client;
        }
        
        // Remove disconnected clients
        foreach (var client in scoreboardEntries.Keys.Except(currentClients).ToList())
        {
            scoreboardEntries.Remove(client);
        }
        
        StateHasChanged();
    }

    public virtual bool ShouldBeOpen()
    {
        return Input.Down("score");
    }
}
